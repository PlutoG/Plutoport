<?php /*

 ocPortal
 Copyright (c) ocProducts, 2004-2012

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license		http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright	ocProducts Ltd
 * @package		core
 */

/**
 * Find the MD5 hash of the space-stripped copy of function within the given code.
 *
 * @param  string			The code.
 * @param  string			Name of the function.
 * @return MD5				The MD5 hash (blank: no such function).
 */
function get_function_hash($code,$function)
{
	$matches=array();
	if (preg_match('#^(function '.$function.'\(.*\n\{.*\n\})#msU',$code,$matches)!=0)
	{
		return md5(preg_replace('#\s#','',$matches[1]));
	}

	return '';
}

/**
 * Insert some code into a function in the given code snippet, by line number (before line number).
 *
 * @param  string			The code.
 * @param  string			Name of the function.
 * @param  integer		Line number relative to start of function.
 * @param  string			Code to insert.
 * @return boolean		Success status.
 */
function insert_code_before__by_linenum(&$code,$function,$linenum,$newcode)
{
	$pos=strpos($code,'function '.$function.'(');
	if ($pos===false) return false;

	$pos=strpos($code,chr(10),$pos)+1;
	for ($i=0;$i<$linenum;$i++)
	{
		$next=strpos($code,chr(10),$pos);
		if ($next===false) return false;
		$pos=$next+1;
	}
	$code=substr($code,0,$pos)."\t".$newcode.chr(10).substr($code,$pos);

	return true;
}

/**
 * Insert some code into a function in the given code snippet, by line number (after line number).
 *
 * @param  string			The code.
 * @param  string			Name of the function.
 * @param  integer		Line number relative to start of function.
 * @param  string			Code to insert.
 * @return boolean		Success status.
 */
function insert_code_after__by_linenum(&$code,$function,$linenum,$newcode)
{
	return insert_code_before__by_linenum($code,$function,$linenum+1,$newcode);
}

/**
 * Insert some code into a function in the given code snippet, by command (before command).
 *
 * @param  string			The code.
 * @param  string			Name of the function.
 * @param  string			The command we're searching to insert by.
 * @param  string			Code to insert.
 * @param  integer		We are inserting at this instance of the line (i.e. takes into account a literal line of code may exist in other places in a function).
 * @return boolean		Success status.
 */
function insert_code_before__by_command(&$code,$function,$command,$newcode,$instance_of_command=1)
{
	$pos=strpos($code,'function '.$function.'(');
	if ($pos===false) return false;

	for ($i=0;$i<$instance_of_command;$i++)
	{
		$next=strpos($code,$command,$pos);
		if ($next===false) return false;
		$pos=$next+1;
	}
	$pos=strrpos(substr($code,0,$pos),chr(10));
	$code=substr($code,0,$pos).chr(10)."\t".$newcode.substr($code,$pos);

	return true;
}

/**
 * Insert some code into a function in the given code snippet, by command (after command).
 *
 * @param  string			The code.
 * @param  string			Name of the function.
 * @param  string			The command we're searching to insert by.
 * @param  string			Code to insert.
 * @param  integer		We are inserting at this instance of the line (i.e. takes into account a literal line of code may exist in other places in a function).
 * @return boolean		Success status.
 */
function insert_code_after__by_command(&$code,$function,$command,$newcode,$instance_of_command=1)
{
	$pos=strpos($code,'function '.$function.'(');
	if ($pos===false) return false;

	for ($i=0;$i<$instance_of_command;$i++)
	{
		$next=strpos($code,$command,$pos);
		if ($next===false) return false;
		$pos=$next+1;
	}
	$pos=strpos($code,chr(10),$pos);
	$code=substr($code,0,$pos).chr(10)."\t".$newcode.substr($code,$pos);

	return true;
}

/**
 * Remove some code from a function in the given code snippet.
 *
 * @param  string			The code.
 * @param  string			Name of the function.
 * @param  string			The command we're searching to insert by.
 * @param  integer		We remove the nth instance of this command.
 * @return boolean		Success status.
 */
function remove_code(&$code,$function,$command,$instance_of_command=1)
{
	$pos=strpos($code,'function '.$function.'(');
	if ($pos===false) return false;

	for ($i=0;$i<$instance_of_command;$i++)
	{
		$next=strpos($code,$command,$pos);
		if ($next===false) return false;
		$pos=$next+1;
	}
	$old_pos=$pos;
	$pos=strpos($code,chr(10),$pos);
	$code=substr($code,0,$pos).chr(10).substr($code,$old_pos+1);

	return true;
}

