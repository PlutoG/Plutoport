<?php /*

 ocPortal
 Copyright (c) ocProducts, 2004-2012

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license		http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright	ocProducts Ltd
 * @package		iotds
 */

class Hook_checklist_iotds
{

	/**
	 * Standard modular run function.
	 *
	 * @return array		An array of tuples: The task row to show, the number of seconds until it is due (or NULL if not on a timer), the number of things to sort out (or NULL if not on a queue), The name of the config option that controls the schedule (or NULL if no option).
	 */
	function run()
	{
		if (!addon_installed('iotds')) return array();

		if (get_option('iotd_update_time')=='') return array();

		require_lang('iotds');

		$date=$GLOBALS['SITE_DB']->query_value_null_ok('iotd','date_and_time',array('is_current'=>1));

		$limit_hours=intval(get_option('iotd_update_time'));

		$seconds_ago=mixed();
		if (!is_null($date))
		{
			$seconds_ago=time()-$date;
			$status=($seconds_ago>$limit_hours*60*60)?0:1;
		} else
		{
			$status=0;
		}

		$_status=($status==0)?do_template('BLOCK_MAIN_STAFF_CHECKLIST_ITEM_STATUS_0'):do_template('BLOCK_MAIN_STAFF_CHECKLIST_ITEM_STATUS_1');

		$config_row=$GLOBALS['SITE_DB']->query_select('config',array('the_page','section'),array('the_name'=>'iotd_update_time'),'',1);
		if (array_key_exists(0,$config_row))
		{
			$_config_url=build_url(array('page'=>'admin_config','type'=>'category','id'=>$config_row[0]['the_page']),get_module_zone('admin_config'));
			$config_url=$_config_url->evaluate();
			$config_url.='#group_'.$config_row[0]['section'];
		} else $config_url=NULL;

		$url=build_url(array('page'=>'cms_iotds','type'=>'ed'),get_module_zone('cms_iotds'));
		$num_queue=$this->get_num_iotd_queue();
		list($info,$seconds_due_in)=staff_checklist_time_ago_and_due($seconds_ago,$limit_hours);
		$info->attach(do_lang_tempcode('NUM_QUEUE',integer_format($num_queue)));
		$tpl=do_template('BLOCK_MAIN_STAFF_CHECKLIST_ITEM',array('_GUID'=>'5c55aed7bedca565c8aa553548b88e64','CONFIG_URL'=>$config_url,'URL'=>$url,'STATUS'=>$_status,'TASK'=>do_lang_tempcode('PT_choose_iotd'),'INFO'=>$info));
		return array(array($tpl,$seconds_due_in,NULL,'iotd_update_time'));
	}

	/**
	 * Get the number of IOTDs in the queue.
	 *
	 * @return integer		Number in queue
	 */
	function get_num_iotd_queue()
	{
		$c=$GLOBALS['SITE_DB']->query_value_null_ok('iotd','COUNT(*)',array('is_current'=>0,'used'=>0));
		if (is_null($c)) return 0;
		return $c;
	}

}


